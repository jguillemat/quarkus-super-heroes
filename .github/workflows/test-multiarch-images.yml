name: Test building multi-arch images

env:
  IMAGE_BASE_NAME: "quay.io/quarkus-super-heroes"

on:
  workflow_dispatch:
  
concurrency:
  group: "workflow = ${{ github.workflow }}, ref = ${{ github.event.ref }}"
  cancel-in-progress: false
  
jobs:
  build-ui-image:
   if: (github.repository == 'quarkusio/quarkus-super-heroes') && (github.ref == 'refs/heads/main')
   runs-on: ubuntu-latest
   steps:
     - uses: actions/checkout@v3
       
     - name: Set up QEMU
       uses: docker/setup-qemu-action@v2
       with:
         platforms: arm64

     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v2

     - name: Build UI image (amd64)
       uses: docker/build-push-action@v3
       with:
         context: ui-super-heroes
         platforms: linux/amd64
         push: false
         load: true
         tags: ${{ env.IMAGE_BASE_NAME }}/ui-super-heroes:latest

     - name: Build UI image (arm64)
       uses: docker/build-push-action@v3
       with:
         context: ui-super-heroes
         platforms: linux/arm64
         push: false
         load: true
         tags: ${{ env.IMAGE_BASE_NAME }}/ui-super-heroes:latest

     - name: Save UI image
       uses: ishworkh/docker-image-artifact-upload@v1
       with:
         image: "${{ env.IMAGE_BASE_NAME }}/ui-super-heroes:latest"
         
  push-ui-image:
    if: ((github.event_name == 'workflow_dispatch') || ((github.event_name == 'workflow_run') && ((github.event.workflow_run.event == 'push') || (github.event.workflow_run.event == 'workflow_dispatch')) && (github.event.workflow_run.conclusion == 'success'))) && ((github.repository == 'quarkusio/quarkus-super-heroes') && (github.ref == 'refs/heads/main'))
    needs:
      - build-ui-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          cache: maven

      - name: Create env vars
        working-directory: ui-super-heroes
        run: echo "APP_VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Get Saved UI Image
        uses: ishworkh/docker-image-artifact-download@v1
        with:
          image: "${{ env.IMAGE_BASE_NAME }}/ui-super-heroes:latest"

      - name: Login to quay
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_REPO_USERNAME }}
          password: ${{ secrets.QUAY_REPO_TOKEN }}

      - name: Tag UI image
        working-directory: ui-super-heroes
        run: "docker tag ${{ env.IMAGE_BASE_NAME }}/ui-super-heroes:latest ${{ env.IMAGE_BASE_NAME }}/ui-super-heroes:${{ env.APP_VERSION }}"

      - name: Push UI image
        working-directory: ui-super-heroes
        run: "docker push -a ${{ env.IMAGE_BASE_NAME }}/ui-super-heroes"

  cleanup-artifacts:
    needs:
      - push-ui-image
    if: success() || failure()
    runs-on: ubuntu-latest
    steps:
      - name: Delete artifacts
        env:
          WEBHOOK_SECRET: ${{ secrets.WEBHOOK_SECRET }}
        run: |
          echo "::add-mask::$WEBHOOK_SECRET"
          curl --verbose --fail --show-error --location --request POST "https://api.github.com/repos/$GITHUB_REPOSITORY/dispatches" --header "Authorization: token $WEBHOOK_SECRET" --header 'Content-Type: application/json' --header 'Accept: application/vnd.github.everest-preview+json' --data-raw "{ \"event_type\": \"delete_all_artifacts\", \"client_payload\": {\"parent_runid\": \"$GITHUB_RUN_ID\", \"parent_repo\": \"$GITHUB_REPOSITORY\"} }"
