name: Build and Push Container images

env:
  IMAGE_BASE_NAME: "quay.io/quarkus-super-heroes"
  MANDREL_VERSION: "22.0.0.2-Final"

on:
  workflow_run:
    workflows:
      - "Basic build and test"
    branches:
      - main
    types:
      - completed
  workflow_dispatch:

concurrency:
  group: "workflow = ${{ github.workflow }}, ref = ${{ github.event.ref }}"
  cancel-in-progress: false

jobs:
  build-test-jvm-images:
    if: ((github.event_name == 'workflow_dispatch') || ((github.event_name == 'workflow_run') && ((github.event.workflow_run.event == 'push') || (github.event.workflow_run.event == 'workflow_dispatch')) && (github.event.workflow_run.conclusion == 'success'))) && ((github.repository == 'quarkusio/quarkus-super-heroes') && (github.ref == 'refs/heads/main'))
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        java:
          - '11'
          - '17'
        project:
          - event-statistics
          - rest-fights
          - rest-heroes
          - rest-villains
    name: "build-test-jvm-${{ matrix.project }}-java-${{ matrix.java }}"
    steps:
      - uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: temurin
          cache: maven

      - name: Create env vars
        working-directory: ${{ matrix.project }}
        run: |
          echo "QUARKUS_VERSION=$(./mvnw help:evaluate -Dexpression=quarkus.platform.version -q -DforceStdout)" >> $GITHUB_ENV &&
          echo "APP_VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV &&
          if [[ ${{ matrix.java }} == '11' ]]; then 
            echo "JVM_DOCKERFILE=Dockerfile.jvm" >> "$GITHUB_ENV" 
          else
            echo "JVM_DOCKERFILE=Dockerfile.jvm${{ matrix.java }}" >> "$GITHUB_ENV"
          fi

      - name: Create container tags
        working-directory: ${{ matrix.project }}
        run: |
          echo "CONTAINER_TAG=${{ env.APP_VERSION }}-quarkus-${{ env.QUARKUS_VERSION }}-java${{ matrix.java }}" >> $GITHUB_ENV &&
          echo "ADDITIONAL_TAG=java${{ matrix.java }}-latest" >> $GITHUB_ENV

      - name: "create-test-jvm-image-${{ matrix.project }}-java-${{ matrix.java }}"
        working-directory: ${{ matrix.project }}
        run: |
          #          ./mvnw verify \
          ./mvnw clean package -DskipTests \
            -Dmaven.compiler.release=${{ matrix.java }} \
            -Dquarkus.http.host=0.0.0.0 \
            -Dquarkus.docker.dockerfile-jvm-path=src/main/docker/${{ env.JVM_DOCKERFILE }} \
            -Dquarkus.container-image.build=true \
            -Dquarkus.container-image.push=false \
            -Dquarkus.container-image.tag=${{ env.CONTAINER_TAG }} \
            -Dquarkus.container-image.additional-tags=${{ env.ADDITIONAL_TAG }}

      - name: "save-jvm-image-${{ matrix.project }}-java-${{ matrix.java }}"
        uses: ishworkh/docker-image-artifact-upload@v1
        with:
          image: "${{ env.IMAGE_BASE_NAME }}/${{ matrix.project }}:${{ env.CONTAINER_TAG }}"

  build-test-native-images:
    if: ((github.event_name == 'workflow_dispatch') || ((github.event_name == 'workflow_run') && ((github.event.workflow_run.event == 'push') || (github.event.workflow_run.event == 'workflow_dispatch')) && (github.event.workflow_run.conclusion == 'success'))) && ((github.repository == 'quarkusio/quarkus-super-heroes') && (github.ref == 'refs/heads/main'))
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java:
          - '11'
          - '17'
        project:
          - event-statistics
          - rest-fights
          - rest-heroes
          - rest-villains
    name: "build-test-native-${{ matrix.project }}-java-${{ matrix.java }}"
    steps:
      - uses: actions/checkout@v3

      - name: Cache and restore Maven artifacts
        id: check-mvn-cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: setup-java-${{ runner.os }}-maven-${{ hashFiles('${{ matrix.project }}/pom.xml') }}

      - name: Cache and restore Mandrel distro
        id: check-mandrel-cache
        uses: actions/cache@v3
        with:
          path: java_package-${{ matrix.java }}.tar.gz
          key: mandrel-distro-${{ env.MANDREL_VERSION }}-${{ matrix.java }}

      - name: Download Mandrel
        if: steps.check-mandrel-cache.outputs.cache-hit != 'true'
        run: |
          download_url="https://github.com/graalvm/mandrel/releases/download/mandrel-${MANDREL_VERSION}/mandrel-java${{ matrix.java }}-linux-amd64-${MANDREL_VERSION}.tar.gz"
          wget -q -O java_package-${{ matrix.java }}.tar.gz $download_url

      - name: Setup Maven+OpenJDK Distro
        uses: actions/setup-java@v3
        with:
          distribution: 'jdkfile'
          jdkFile: java_package-${{ matrix.java }}.tar.gz
          java-version: ${{ matrix.java }}
          architecture: x64

      - name: Create env vars
        working-directory: ${{ matrix.project }}
        run: |
          echo "QUARKUS_VERSION=$(./mvnw help:evaluate -Dexpression=quarkus.platform.version -q -DforceStdout)" >> $GITHUB_ENV && \
          echo "APP_VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Create container tags
        working-directory: ${{ matrix.project }}
        run: |
          echo "CONTAINER_TAG=${{ env.APP_VERSION }}-quarkus-${{ env.QUARKUS_VERSION }}-native-java${{ matrix.java }}" >> $GITHUB_ENV && \
          echo "ADDITIONAL_TAG=native-java${{ matrix.java }}-latest" >> $GITHUB_ENV

      - name: "build-test-native-image-${{ matrix.project }}-java-${{ matrix.java }}"
        working-directory: ${{ matrix.project }}
        run: |
          ./mvnw -B clean verify -Pnative \
            -Dquarkus.http.host=0.0.0.0 \
            -Dmaven.compiler.release=${{ matrix.java }}

      - name: "build-native-container-${{ matrix.project }}-java-${{ matrix.java }}"
        working-directory: ${{ matrix.project }}
        run: |
          ./mvnw -B package -DskipTests -Pnative \
            -Dmaven.compiler.release=${{ matrix.java }} \
            -Dquarkus.http.host=0.0.0.0 \
            -Dquarkus.native.container-build=true \
            -Dquarkus.native.reuse-existing=true \
            -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-native-image:22.0-java${{ matrix.java }} \
            -Dquarkus.container-image.build=true \
            -Dquarkus.container-image.push=false \
            -Dquarkus.container-image.tag=${{ env.CONTAINER_TAG }} \
            -Dquarkus.container-image.additional-tags=${{ env.ADDITIONAL_TAG }}

      - name: "save-native-image-${{ matrix.project }}-java-${{ matrix.java }}"
        uses: ishworkh/docker-image-artifact-upload@v1
        with:
          image: "${{ env.IMAGE_BASE_NAME }}/${{ matrix.project }}:${{ env.CONTAINER_TAG }}"

  build-ui-image:
    if: ((github.event_name == 'workflow_dispatch') || ((github.event_name == 'workflow_run') && ((github.event.workflow_run.event == 'push') || (github.event.workflow_run.event == 'workflow_dispatch')) && (github.event.workflow_run.conclusion == 'success'))) && ((github.repository == 'quarkusio/quarkus-super-heroes') && (github.ref == 'refs/heads/main'))
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build UI image
        uses: docker/build-push-action@v3
        with:
          context: ui-super-heroes
          push: false
          load: true
          tags: ${{ env.IMAGE_BASE_NAME }}/ui-super-heroes:latest

      - name: Save UI image
        uses: ishworkh/docker-image-artifact-upload@v1
        with:
          image: "${{ env.IMAGE_BASE_NAME }}/ui-super-heroes:latest"

  push-app-images:
    if: ((github.event_name == 'workflow_dispatch') || ((github.event_name == 'workflow_run') && ((github.event.workflow_run.event == 'push') || (github.event.workflow_run.event == 'workflow_dispatch')) && (github.event.workflow_run.conclusion == 'success'))) && ((github.repository == 'quarkusio/quarkus-super-heroes') && (github.ref == 'refs/heads/main'))
    needs:
      - build-test-jvm-images
      - build-test-native-images
      - build-ui-image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java:
          - '11'
          - '17'
        kind:
          - ""
          - "native-"
        project:
          - event-statistics
          - rest-fights
          - rest-heroes
          - rest-villains
    name: "push-app-images-${{ matrix.project }}-${{ matrix.kind }}java-${{ matrix.java }}"
    steps:
      - uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: temurin
          cache: maven

      - name: Create env vars
        working-directory: ${{ matrix.project }}
        run: |
          echo "QUARKUS_VERSION=$(./mvnw help:evaluate -Dexpression=quarkus.platform.version -q -DforceStdout)" >> $GITHUB_ENV &&
          echo "APP_VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Create container tags
        working-directory: ${{ matrix.project }}
        run: |
          echo "CONTAINER_TAG=${{ env.APP_VERSION }}-quarkus-${{ env.QUARKUS_VERSION }}-${{ matrix.kind }}java${{ matrix.java }}" >> $GITHUB_ENV &&
          echo "ADDITIONAL_TAG=${{ matrix.kind }}java${{ matrix.java }}-latest" >> $GITHUB_ENV

      - name: "get-saved-image-${{ matrix.project }}-${{ matrix.kind }}java-${{ matrix.java }}"
        uses: ishworkh/docker-image-artifact-download@v1
        with:
          image: "${{ env.IMAGE_BASE_NAME }}/${{ matrix.project }}:${{ env.CONTAINER_TAG }}"

      - name: Login to quay
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_REPO_USERNAME }}
          password: ${{ secrets.QUAY_REPO_TOKEN }}

      - name: Tag image
        working-directory: ${{ matrix.project }}
        run: "docker tag ${{ env.IMAGE_BASE_NAME }}/${{ matrix.project }}:${{ env.CONTAINER_TAG }} ${{ env.IMAGE_BASE_NAME }}/${{ matrix.project }}:${{ env.ADDITIONAL_TAG }}"

      - name: Push images in ${{ matrix.project }}
        working-directory: ${{ matrix.project }}
        run: "docker push -a ${{ env.IMAGE_BASE_NAME }}/${{ matrix.project }}"

  push-ui-image:
    if: ((github.event_name == 'workflow_dispatch') || ((github.event_name == 'workflow_run') && ((github.event.workflow_run.event == 'push') || (github.event.workflow_run.event == 'workflow_dispatch')) && (github.event.workflow_run.conclusion == 'success'))) && ((github.repository == 'quarkusio/quarkus-super-heroes') && (github.ref == 'refs/heads/main'))
    needs:
      - build-test-jvm-images
      - build-test-native-images
      - build-ui-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          cache: maven

      - name: Create env vars
        working-directory: ui-super-heroes
        run: echo "APP_VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Get Saved UI Image
        uses: ishworkh/docker-image-artifact-download@v1
        with:
          image: "${{ env.IMAGE_BASE_NAME }}/ui-super-heroes:latest"

      - name: Login to quay
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_REPO_USERNAME }}
          password: ${{ secrets.QUAY_REPO_TOKEN }}

      - name: Tag UI image
        working-directory: ui-super-heroes
        run: "docker tag ${{ env.IMAGE_BASE_NAME }}/ui-super-heroes:latest ${{ env.IMAGE_BASE_NAME }}/ui-super-heroes:${{ env.APP_VERSION }}"

      - name: Push UI image
        working-directory: ui-super-heroes
        run: "docker push -a ${{ env.IMAGE_BASE_NAME }}/ui-super-heroes"

  cleanup-artifacts:
    needs:
      - push-app-images
      - push-ui-image
    if: success() || failure()
    runs-on: ubuntu-latest
    steps:
      - name: Delete artifacts
        env:
          WEBHOOK_SECRET: ${{ secrets.WEBHOOK_SECRET }}
        run: |
          echo "::add-mask::$WEBHOOK_SECRET"
          curl --verbose --fail --show-error --location --request POST "https://api.github.com/repos/$GITHUB_REPOSITORY/dispatches" --header "Authorization: token $WEBHOOK_SECRET" --header 'Content-Type: application/json' --header 'Accept: application/vnd.github.everest-preview+json' --data-raw "{ \"event_type\": \"delete_all_artifacts\", \"client_payload\": {\"parent_runid\": \"$GITHUB_RUN_ID\", \"parent_repo\": \"$GITHUB_REPOSITORY\"} }"
